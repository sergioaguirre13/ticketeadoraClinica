@model List<ticketeadoraClinica.Models.Turno>

@{
    Layout = null;
    <!-- sin layout para pantalla completa -->
    ViewData["Title"] = "Monitor de Turnos";
}
<script src="https://cdn.jsdelivr.net/npm/@@microsoft/signalr@7.0.5/dist/browser/signalr.min.js"></script>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">

<style>
    body {
        background: radial-gradient(circle, #e3f2fd, #bbdefb);
        height: 100vh;
        color: #0d47a1;
        font-family: 'Segoe UI', sans-serif;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }

    .titulo {
        font-size: 3rem;
        font-weight: bold;
        color: #1565c0;
        margin-bottom: 30px;
        text-shadow: 2px 2px 4px rgba(0,0,0,0.1);
    }

    .tabla-turnos {
        background: white;
        border-radius: 15px;
        box-shadow: 0 6px 20px rgba(0,0,0,0.2);
        padding: 30px;
        width: 80%;
        max-width: 1000px;
        animation: fadeIn 1.2s ease-in-out;
    }

    table {
        width: 100%;
        text-align: center;
        font-size: 1.5rem;
    }

    th {
        background-color: #0d6efd;
        color: white;
        font-size: 1.2rem;
        letter-spacing: 1px;
    }

    tr:nth-child(even) {
        background-color: #f8f9fa;
    }

    .codigo {
        font-weight: bold;
        font-size: 2rem;
        color: #0d47a1;
    }

    .tipo {
        font-size: 1.2rem;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
</style>

<div class="text-center">
    <h1 class="titulo">
        <i class="bi bi-people-fill me-2"></i> MONITOR DE TURNOS
    </h1>

    <div class="tabla-turnos">
        <table class="table table-borderless">
            <thead>
                <tr>
                    <th>Turno</th>
                    <th>DNI</th>
                    <th>Tipo</th>
                    <th>Fecha</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var t in Model)
                {
                    <tr>
                        <td class="codigo">@t.Codigo</td>
                        <td>@t.Dni</td>
                        <td class="tipo">@t.Tipo</td>
                        <td>@t.Fecha.ToString("HH:mm:ss")</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/turnosHub")
        .build();

    connection.start()
        .then(() => console.log("✅ Conectado al hub de turnos"))
        .catch(err => console.error(err.toString()));

    // 📩 Cuando llega un nuevo turno, lo agrega a la tabla
    connection.on("RecibirTurno", (codigo, dni, tipo, hora) => {
        const tbody = document.querySelector("tbody");
        const nuevaFila = document.createElement("tr");
        nuevaFila.innerHTML = `
            <td class="codigo">${codigo}</td>
            <td>${dni}</td>
            <td class="tipo">${tipo}</td>
            <td>${hora}</td>
        `;

        tbody.prepend(nuevaFila); // Agrega arriba del todo
    });
</script>
